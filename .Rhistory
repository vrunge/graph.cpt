solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[1],vec[2]))), " ")
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- t(Q) %*% D %*% Q
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
cat("res : " ,dist_SPD(D,diag(vec)), " ")
cat("res : " ,dist_SPD(D,diag(c(vec[3],vec[1],vec[2]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
library(graph.cpt)
eigen(W)
eigen(diag(vec))
eigen(W)
eigen(W)
eigen(diag(vec))
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
eigen(diag(vec))
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
eigen(diag(vec))
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
eigen(diag(vec))
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
library(graph.cpt)
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(solve(W),diag(vec)), " ")
cat("res : " ,dist_SPD(solve(W),diag(vec)), " ")
solve(W)
eigen(solve(W))
eigen(W)
eigen(W)
eigen(solve(W))
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(solve(W),diag(vec)), " ")
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(solve(W),diag(vec)), " ")
cat("res : " ,dist_SPD(solve(W),solve(diag(vec))), " ")
cat("res" ,dist_SPD(D,diag(vec)))
cat("res : " ,dist_SPD(W,diag(vec)), " ")
cat("res : " ,dist_SPD(solve(W),solve(diag(vec))), " ")
dist_SPD(W,diag(vec))
dist_SPD(solve(W),solve(diag(vec)))
dist_SPD(W,diag(vec))
dist_SPD(solve(W),solve(diag(vec)))
dist_SPD(Q %*% D %*% t(Q), Q %*% diag(vec) %*% t(Q))
dist_SPD(Q %*% W %*% t(Q), Q %*% diag(vec) %*% t(Q))
dist_SPD(W,diag(vec))
dist_SPD(solve(W),solve(diag(vec)))
dist_SPD(Q %*% W %*% t(Q), Q %*% diag(vec) %*% t(Q))
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
eigen(solve(W))
dist_SPD(W,diag(vec))
cat("res : " ,dist_SPD(W,diag(c(vec[3],vec[2],vec[1]))), " ")
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
eigen(solve(W))
dist_SPD(W,diag(vec))
dist_SPD(solve(W),solve(diag(vec)))
dist_SPD(Q %*% W %*% t(Q), Q %*% diag(vec) %*% t(Q))
dist_SPD(W,diag(c(vec[3],vec[2],vec[1])))
dist_SPD(W,diag(vec))
dist_SPD(solve(W),solve(diag(vec)))
dist_SPD(Q %*% W %*% t(Q), Q %*% diag(vec) %*% t(Q))
dist_SPD(W, diag(vec))
dist_SPD(solve(W), solve(diag(vec)))
dist_SPD(Q %*% W %*% t(Q), Q %*% diag(vec) %*% t(Q))
vec <- c(1,2,3)
D <- diag(vec)
n <- 3
random_matrix <- matrix(rnorm(n^2), n, n)
Q <- qr.Q(qr(random_matrix)) # Q%*%t(Q) = Id
t(Q)%*%Q
solve(Q)%*%Q
W <- Q %*% D %*% t(Q)
eigen(W)
eigen(solve(W))
library(graph.cpt)
library(rWishart)
?rWishart
rWishart(2, 5, diag(1, 20))
rWishart(2, 5, diag(1, 5))
rWishart(10, 5, diag(1, 5))
for(i in 1:10)rWishart(10, 5, diag(1, 5))
diag(1, 5)
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(diag(1, 5), data[[i]]))
data[[i]]
data <- rWishart(10, 5, diag(1, 5))
rWishart(10, 5, diag(1, 5))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(diag(1, 5), data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(diag(1, 5), data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(diag(1, 5), data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(data[,,1
library(rWishart)
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 5, diag(1, 5))
for(i in 1:10)
print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 50, diag(1, 5))
for(i in 1:10)
print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 50, diag(1, 5))
for(i in 1:10)
print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 50, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 5000, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 500000, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 10^10, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 10^5, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 10^2, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 10, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 10^5, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
data <- rWishart(10, 10^10, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
library(rWishart)
data <- rWishart(10, 10, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
data <- rWishart(10, 10^5, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
data <- rWishart(10, 10^10, diag(1, 5))
for(i in 1:10) print(dist_SPD(data[,,1], data[,,i]))
install.packages("FDAdapt")
library(graph.cpt)
install.packages("FDAdapt")
version
#create singular matrix
mat <- matrix(c(1, 1, 1, 1), ncol=2, nrow=2)
#view matrix
mat
solve(mat)
#view matrix
mat
solve(mat)
#create singular matrix
mat <- matrix(c(1, 2, 1, 2), ncol=2, nrow=2)
#view matrix
mat
solve(mat)
#create singular matrix
mat <- matrix(c(1, 2, 1, 2.00000002), ncol=2, nrow=2)
#view matrix
mat
solve(mat)
#create singular matrix
mat <- matrix(c(1, 2, 1, 2.00000002), ncol=2, nrow=2)
#create singular matrix
mat <- matrix(c(1, 2, 1, 2.00000000002), ncol=2, nrow=2)
#view matrix
mat
solve(mat)
#create singular matrix
mat <- matrix(c(1, 2, 1, 2.0000000000002), ncol=2, nrow=2)
#view matrix
mat
solve(mat)
#create singular matrix
mat <- matrix(c(1, 2, 1, 2.000000000000002), ncol=2, nrow=2)
#view matrix
mat
solve(mat)
library(graph.cpt)
library(fpop)
install.packages("fpop")
library(fpop)
?Fpop
Fpop
Fpop(rnorm(1000), 2*log(10000))
chisq.test(1000)
rchisq(1000,1)
sum(rchisq(1000,1))
sum(rchisq(1,1000))
Fpop(c(rnorm(100), rnorm(100,mean = 1)), 2*log(200))
Fpop(c(rnorm(100), rnorm(100,mean = 1)), 2*log(200))
Fpop(c(rnorm(100), rnorm(100,mean = 1)), 2*log(200))
res <- Fpop(c(rnorm(100), rnorm(100,mean = 1)), 2*log(200))
plot(res$cost, type = 'b')
res$J.est
res$cost[200]
res$cost[201]
res$cost[200]
res$cost[200] + sum(data^2)
data <- c(rnorm(100), rnorm(100,mean = 1))
res <- Fpop(data, 2*log(200))
data <- c(rnorm(100), rnorm(100,mean = 1))
res <- Fpop(data, 2*log(200))
plot(res$cost, type = 'b')
res$J.est
res$cost[200]
res$cost[201]
res$cost[200]
res$cost[200] + sum(data^2)
data <- c(rnorm(100), rnorm(100,mean = 1))
res <- Fpop(data, 2*log(200))
plot(res$cost, type = 'b')
res$J.est
res$cost[200] + sum(data^2)
2*log(200)
data <- c(rnorm(100), rnorm(100,mean = 0))
res <- Fpop(data, 2*log(200))
plot(res$cost, type = 'b')
res$J.est
res$cost[200] + sum(data^2)
2*log(200)
Fpop
res$J.est
res$cost[200] + sum(data^2)
2*log(200)
2*2*log(200)
res$J.est + 2*2*log(200)
res$cost[200] + sum(data^2)
v = 4
library(graph.cpt)
exp(3)
11/12
12/13
library(dust)
?dust
dust_R_1D(data = rnorm(10^3))
system.time(dust_R_1D(data = rnorm(10^3)))
system.time(dust_R_1D(data = rnorm(10^3)))
system.time(dust_R_1D(data = rnorm(10^4;)))
system.time(dust_R_1D(data = rnorm(10^4)))
?dust_R_1D
